apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: template-service-broker
parameters:
- name: IMAGE
  value: openshift/origin:latest
- name: NAMESPACE
  value: openshift-template-service-broker
- name: KUBE_SYSTEM
  value: kube-system
- name: LOGLEVEL
  value: "0"
- name: API_SERVER_CONFIG
  value: |
   kind: TemplateServiceBrokerConfig
   apiVersion: config.templateservicebroker.openshift.io/v1
   templateNamespaces:
   - openshift
objects:

# to create the tsb server
- apiVersion: extensions/v1beta1
  kind: DaemonSet
  metadata:
    namespace: ${NAMESPACE}
    name: apiserver
    labels:
      apiserver: "true"
  spec:
    template:
      metadata:
        name: apiserver
        labels:
          apiserver: "true"
      spec:
        serviceAccountName: apiserver
        containers:
        - name: c
          image: ${IMAGE}
          command:
          - "/usr/bin/openshift"
          - "start"
          - "template-service-broker"
          - "--secure-port=8443"
          - "--audit-log-path=-"
          - "--tls-cert-file=/var/serving-cert/tls.crt"
          - "--tls-private-key-file=/var/serving-cert/tls.key"
          - "--loglevel=${LOGLEVEL}"
          - "--config=/var/apiserver-config/apiserver-config.yaml"
          ports:
          - containerPort: 8443
          volumeMounts:
          - mountPath: /var/serving-cert
            name: serving-cert
          - mountPath: /var/apiserver-config
            name: apiserver-config
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8443
              scheme: HTTPS
        volumes:
        - name: serving-cert
          secret:
            defaultMode: 420
            secretName: apiserver-serving-cert
        - name: apiserver-config
          configMap:
            defaultMode: 420
            name: apiserver-config

# to create the config for the TSB
- apiVersion: v1
  kind: ConfigMap
  metadata:
    namespace: ${NAMESPACE}
    name: apiserver-config
  data:
    apiserver-config.yaml: ${API_SERVER_CONFIG}

# to be able to assign powers to the process
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    namespace: ${NAMESPACE}
    name: apiserver

# to be able to expose TSB inside the cluster
- apiVersion: v1
  kind: Service
  metadata:
    namespace: ${NAMESPACE}
    name: apiserver
    annotations:
      service.alpha.openshift.io/serving-cert-secret-name: apiserver-serving-cert
  spec:
    selector:
      apiserver: "true"
    ports:
    - port: 443
      targetPort: 8443

# to delegate authentication and authorization
- apiVersion: authorization.openshift.io/v1
  kind: ClusterRoleBinding
  metadata:
    name: auth-delegator-${NAMESPACE}
  roleRef:
    name: system:auth-delegator
  subjects:
  - kind: ServiceAccount
    namespace: ${NAMESPACE}
    name: apiserver

# to have the template service broker powers
- apiVersion: authorization.openshift.io/v1
  kind: ClusterRoleBinding
  metadata:
    name: tsb-${NAMESPACE}
  roleRef:
    name: system:openshift:controller:template-service-broker
  subjects:
  - kind: ServiceAccount
    namespace: ${NAMESPACE}
    name: apiserver

# to read the config for terminating authentication
- apiVersion: authorization.openshift.io/v1
  kind: RoleBinding
  metadata:
    namespace: ${KUBE_SYSTEM}
    name: extension-apiserver-authentication-reader-${NAMESPACE}
  roleRef:
    namespace: kube-system
    name: extension-apiserver-authentication-reader
  subjects:
  - kind: ServiceAccount
    namespace: ${NAMESPACE}
    name: apiserver
